{
  "contractName": "StrikersBase",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cards",
      "outputs": [
        {
          "name": "mintTime",
          "type": "uint64"
        },
        {
          "name": "mintNumber",
          "type": "uint16"
        },
        {
          "name": "playerId",
          "type": "uint8"
        },
        {
          "name": "seriesId",
          "type": "uint8"
        },
        {
          "name": "runId",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cardId",
          "type": "uint256"
        }
      ],
      "name": "CardMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setPackSaleAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_playerId",
          "type": "uint8"
        },
        {
          "name": "_seriesId",
          "type": "uint8"
        },
        {
          "name": "_runId",
          "type": "uint8"
        },
        {
          "name": "_mintNumber",
          "type": "uint16"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "_mintCard",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60606040526040805190810160405280600e81526020017f43727970746f537472696b6572730000000000000000000000000000000000008152506040805190810160405280600481526020017f5354524b00000000000000000000000000000000000000000000000000000000815250816004908051906020019062000088929190620000eb565b508060059080519060200190620000a1929190620000eb565b50505033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200019a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200012e57805160ff19168380011785556200015f565b828001600101855582156200015f579182015b828111156200015e57825182559160200191906001019062000141565b5b5090506200016e919062000172565b5090565b6200019791905b808211156200019357600081600090555060010162000179565b5090565b90565b61271880620001aa6000396000f30060606040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610122578063081812fc146101b0578063095ea7b31461021357806318160ddd1461025557806323b872dd1461027e5780632f745c59146102df57806330f4751e1461033557806342842e0e146103b35780634f558e79146104145780634f6ccce71461044f5780636352211e1461048657806370a08231146104e95780638da5cb5b146105365780638dc107681461058b578063914e45d01461060c57806395d89b4114610645578063a22cb465146106d3578063b88d4fde14610717578063c87b56dd146107bb578063e985e9c514610857578063f2fde38b146108c7575b600080fd5b341561012d57600080fd5b610135610900565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017557808201518184015260208101905061015a565b50505050905090810190601f1680156101a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101bb57600080fd5b6101d160048080359060200190919050506109a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561021e57600080fd5b610253600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109e5565b005b341561026057600080fd5b610268610bab565b6040518082815260200191505060405180910390f35b341561028957600080fd5b6102dd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bb8565b005b34156102ea57600080fd5b61031f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ccf565b6040518082815260200191505060405180910390f35b341561034057600080fd5b61039d600480803560ff1690602001909190803560ff1690602001909190803560ff1690602001909190803561ffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d47565b6040518082815260200191505060405180910390f35b34156103be57600080fd5b610412600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f22565b005b341561041f57600080fd5b6104356004808035906020019091905050610f5a565b604051808215151515815260200191505060405180910390f35b341561045a57600080fd5b6104706004808035906020019091905050610fcb565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104a76004808035906020019091905050611004565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104f457600080fd5b610520600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611081565b6040518082815260200191505060405180910390f35b341561054157600080fd5b610549611105565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561059657600080fd5b6105ac600480803590602001909190505061112b565b604051808667ffffffffffffffff1667ffffffffffffffff1681526020018561ffff1661ffff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b341561061757600080fd5b610643600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111b6565b005b341561065057600080fd5b6106586112e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069857808201518184015260208101905061067d565b50505050905090810190601f1680156106c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106de57600080fd5b610715600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050611389565b005b341561072257600080fd5b6107b9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506114c5565b005b34156107c657600080fd5b6107dc6004808035906020019091905050611504565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081c578082015181840152602081019050610801565b50505050905090810190601f1680156108495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561086257600080fd5b6108ad600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506115a1565b604051808215151515815260200191505060405180910390f35b34156108d257600080fd5b6108fe600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611635565b005b610908612549565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109f082611004565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a2d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a6d5750610a6c81336115a1565b5b1515610a7857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610a99836109a8565b73ffffffffffffffffffffffffffffffffffffffff16141580610ae95750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610ba657826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600880549050905090565b80610bc3338261178d565b1515610bce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610c0a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c4657600080fd5b610c508483611822565b610c5a848361198b565b610c648383611ba6565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610cda83611081565b82101515610ce757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d3357fe5b906000526020600020900154905092915050565b6000610d5161255d565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daf57600080fd5b60a0604051908101604052804267ffffffffffffffff1681526020018661ffff1681526020018960ff1681526020018860ff1681526020018760ff1681525091506001600c8054806001018281610e0691906125a4565b9160005260206000209001600085909190915060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548161ffff021916908361ffff160217905550604082015181600001600a6101000a81548160ff021916908360ff160217905550606082015181600001600b6101000a81548160ff021916908360ff160217905550608082015181600001600c6101000a81548160ff021916908360ff16021790555050500390507f220b53d3db6f7694ac363d118b95866fad85b0e6b18b77cbe36eb044996994a0816040518082815260200191505060405180910390a1610f148482611c7a565b809250505095945050505050565b80610f2d338261178d565b1515610f3857600080fd5b610f5484848460206040519081016040528060008152506114c5565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610fd5610bab565b82101515610fe257600080fd5b600882815481101515610ff157fe5b9060005260206000209001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561107857600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110be57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c8181548110151561113a57fe5b90600052602060002090016000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900461ffff169080600001600a9054906101000a900460ff169080600001600b9054906101000a900460ff169080600001600c9054906101000a900460ff16905085565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121457600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663643445a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561127a57600080fd5b5af1151561128757600080fd5b50505060405180519050151561129c57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6112e9612549565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137f5780601f106113545761010080835404028352916020019161137f565b820191906000526020600020905b81548152906001019060200180831161136257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113c457600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816114d0338261178d565b15156114db57600080fd5b6114e6858585610bb8565b6114f285858585611cce565b15156114fd57600080fd5b5050505050565b61150c612549565b611514612549565b61151d83610f5a565b151561152857600080fd5b61153183611e97565b9050611599606060405190810160405280604081526020017f68747470733a2f2f75732d63656e7472616c312d63727970746f737472696b6581526020017f72732d6170692e636c6f756466756e6374696f6e732e6e65742f63617264732f81525082611fe9565b915050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061179983611004565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061180857508373ffffffffffffffffffffffffffffffffffffffff166117f0846109a8565b73ffffffffffffffffffffffffffffffffffffffff16145b80611819575061181881856115a1565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661184282611004565b73ffffffffffffffffffffffffffffffffffffffff1614151561186457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156119875760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b600080600061199a85856121c9565b60076000858152602001908152602001600020549250611a066001600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506122f790919063ffffffff16565b9150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611a5457fe5b906000526020600020900154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515611aaf57fe5b9060005260206000209001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611b0c57fe5b906000526020600020900181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b6d91906125d0565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b6000611bb28383612310565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281611c4891906125fc565b916000526020600020900160008490919091505550806007600084815260200190815260200160002081905550505050565b611c848282612468565b600880549050600960008381526020019081526020016000208190555060088054806001018281611cb591906125fc565b9160005260206000209001600083909190915055505050565b600080611cf08573ffffffffffffffffffffffffffffffffffffffff16612518565b1515611cff5760019150611e8e565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611dc1578082015181840152602081019050611da6565b50505050905090810190601f168015611dee5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1515611e0e57600080fd5b5af11515611e1b57600080fd5b50505060405180519050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b611e9f612549565b600080611eaa612628565b600080861415611ef1576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450611fe0565b8593505b600084141515611f1b578280600101935050600a84811515611f1357fe5b049350611ef5565b82604051805910611f295750595b9080825280601f01601f191660200182016040525091506001830390505b600086141515611fdc57600a86811515611f5d57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515611f9857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611fd457fe5b049550611f47565b8194505b50505050919050565b611ff1612549565b611ff9612628565b612001612628565b612009612549565b612011612628565b600080889550879450845186510160405180591061202c5750595b9080825280601f01601f1916602001820160405250935083925060009150600090505b855181101561210257858181518110151561206657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156120c557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061204f565b600090505b84518110156121ba57848181518110151561211e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561217d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612107565b82965050505050505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166121e982611004565b73ffffffffffffffffffffffffffffffffffffffff1614151561220b57600080fd5b61225e6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122f790919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561230557fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561237d57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124216001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461252b90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124a457600080fd5b6124ae8282611ba6565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b600080828401905083811015151561253f57fe5b8091505092915050565b602060405190810160405280600081525090565b60a060405190810160405280600067ffffffffffffffff168152602001600061ffff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b8154818355818115116125cb578183600052602060002091820191016125ca919061263c565b5b505050565b8154818355818115116125f7578183600052602060002091820191016125f691906126c7565b5b505050565b8154818355818115116126235781836000526020600020918201910161262291906126c7565b5b505050565b602060405190810160405280600081525090565b6126c491905b808211156126c057600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549061ffff021916905560008201600a6101000a81549060ff021916905560008201600b6101000a81549060ff021916905560008201600c6101000a81549060ff021916905550600101612642565b5090565b90565b6126e991905b808211156126e55760008160009055506001016126cd565b5090565b905600a165627a7a72305820cb71972f1f7cab612bdf77ef0dda0d646f11979b91c18089f13fa3774a55b1680029",
  "deployedBytecode": "0x60606040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610122578063081812fc146101b0578063095ea7b31461021357806318160ddd1461025557806323b872dd1461027e5780632f745c59146102df57806330f4751e1461033557806342842e0e146103b35780634f558e79146104145780634f6ccce71461044f5780636352211e1461048657806370a08231146104e95780638da5cb5b146105365780638dc107681461058b578063914e45d01461060c57806395d89b4114610645578063a22cb465146106d3578063b88d4fde14610717578063c87b56dd146107bb578063e985e9c514610857578063f2fde38b146108c7575b600080fd5b341561012d57600080fd5b610135610900565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017557808201518184015260208101905061015a565b50505050905090810190601f1680156101a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101bb57600080fd5b6101d160048080359060200190919050506109a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561021e57600080fd5b610253600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109e5565b005b341561026057600080fd5b610268610bab565b6040518082815260200191505060405180910390f35b341561028957600080fd5b6102dd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bb8565b005b34156102ea57600080fd5b61031f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ccf565b6040518082815260200191505060405180910390f35b341561034057600080fd5b61039d600480803560ff1690602001909190803560ff1690602001909190803560ff1690602001909190803561ffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d47565b6040518082815260200191505060405180910390f35b34156103be57600080fd5b610412600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f22565b005b341561041f57600080fd5b6104356004808035906020019091905050610f5a565b604051808215151515815260200191505060405180910390f35b341561045a57600080fd5b6104706004808035906020019091905050610fcb565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104a76004808035906020019091905050611004565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104f457600080fd5b610520600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611081565b6040518082815260200191505060405180910390f35b341561054157600080fd5b610549611105565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561059657600080fd5b6105ac600480803590602001909190505061112b565b604051808667ffffffffffffffff1667ffffffffffffffff1681526020018561ffff1661ffff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b341561061757600080fd5b610643600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111b6565b005b341561065057600080fd5b6106586112e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069857808201518184015260208101905061067d565b50505050905090810190601f1680156106c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106de57600080fd5b610715600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050611389565b005b341561072257600080fd5b6107b9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506114c5565b005b34156107c657600080fd5b6107dc6004808035906020019091905050611504565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081c578082015181840152602081019050610801565b50505050905090810190601f1680156108495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561086257600080fd5b6108ad600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506115a1565b604051808215151515815260200191505060405180910390f35b34156108d257600080fd5b6108fe600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611635565b005b610908612549565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109f082611004565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a2d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a6d5750610a6c81336115a1565b5b1515610a7857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610a99836109a8565b73ffffffffffffffffffffffffffffffffffffffff16141580610ae95750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610ba657826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600880549050905090565b80610bc3338261178d565b1515610bce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610c0a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c4657600080fd5b610c508483611822565b610c5a848361198b565b610c648383611ba6565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610cda83611081565b82101515610ce757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d3357fe5b906000526020600020900154905092915050565b6000610d5161255d565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daf57600080fd5b60a0604051908101604052804267ffffffffffffffff1681526020018661ffff1681526020018960ff1681526020018860ff1681526020018760ff1681525091506001600c8054806001018281610e0691906125a4565b9160005260206000209001600085909190915060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548161ffff021916908361ffff160217905550604082015181600001600a6101000a81548160ff021916908360ff160217905550606082015181600001600b6101000a81548160ff021916908360ff160217905550608082015181600001600c6101000a81548160ff021916908360ff16021790555050500390507f220b53d3db6f7694ac363d118b95866fad85b0e6b18b77cbe36eb044996994a0816040518082815260200191505060405180910390a1610f148482611c7a565b809250505095945050505050565b80610f2d338261178d565b1515610f3857600080fd5b610f5484848460206040519081016040528060008152506114c5565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610fd5610bab565b82101515610fe257600080fd5b600882815481101515610ff157fe5b9060005260206000209001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561107857600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110be57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c8181548110151561113a57fe5b90600052602060002090016000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900461ffff169080600001600a9054906101000a900460ff169080600001600b9054906101000a900460ff169080600001600c9054906101000a900460ff16905085565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121457600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663643445a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561127a57600080fd5b5af1151561128757600080fd5b50505060405180519050151561129c57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6112e9612549565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137f5780601f106113545761010080835404028352916020019161137f565b820191906000526020600020905b81548152906001019060200180831161136257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113c457600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816114d0338261178d565b15156114db57600080fd5b6114e6858585610bb8565b6114f285858585611cce565b15156114fd57600080fd5b5050505050565b61150c612549565b611514612549565b61151d83610f5a565b151561152857600080fd5b61153183611e97565b9050611599606060405190810160405280604081526020017f68747470733a2f2f75732d63656e7472616c312d63727970746f737472696b6581526020017f72732d6170692e636c6f756466756e6374696f6e732e6e65742f63617264732f81525082611fe9565b915050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116cd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061179983611004565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061180857508373ffffffffffffffffffffffffffffffffffffffff166117f0846109a8565b73ffffffffffffffffffffffffffffffffffffffff16145b80611819575061181881856115a1565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661184282611004565b73ffffffffffffffffffffffffffffffffffffffff1614151561186457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156119875760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b600080600061199a85856121c9565b60076000858152602001908152602001600020549250611a066001600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506122f790919063ffffffff16565b9150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611a5457fe5b906000526020600020900154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515611aaf57fe5b9060005260206000209001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611b0c57fe5b906000526020600020900181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611b6d91906125d0565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b6000611bb28383612310565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281611c4891906125fc565b916000526020600020900160008490919091505550806007600084815260200190815260200160002081905550505050565b611c848282612468565b600880549050600960008381526020019081526020016000208190555060088054806001018281611cb591906125fc565b9160005260206000209001600083909190915055505050565b600080611cf08573ffffffffffffffffffffffffffffffffffffffff16612518565b1515611cff5760019150611e8e565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611dc1578082015181840152602081019050611da6565b50505050905090810190601f168015611dee5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1515611e0e57600080fd5b5af11515611e1b57600080fd5b50505060405180519050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b611e9f612549565b600080611eaa612628565b600080861415611ef1576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450611fe0565b8593505b600084141515611f1b578280600101935050600a84811515611f1357fe5b049350611ef5565b82604051805910611f295750595b9080825280601f01601f191660200182016040525091506001830390505b600086141515611fdc57600a86811515611f5d57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515611f9857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611fd457fe5b049550611f47565b8194505b50505050919050565b611ff1612549565b611ff9612628565b612001612628565b612009612549565b612011612628565b600080889550879450845186510160405180591061202c5750595b9080825280601f01601f1916602001820160405250935083925060009150600090505b855181101561210257858181518110151561206657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156120c557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061204f565b600090505b84518110156121ba57848181518110151561211e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561217d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612107565b82965050505050505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166121e982611004565b73ffffffffffffffffffffffffffffffffffffffff1614151561220b57600080fd5b61225e6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122f790919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561230557fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561237d57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124216001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461252b90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124a457600080fd5b6124ae8282611ba6565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b600080828401905083811015151561253f57fe5b8091505092915050565b602060405190810160405280600081525090565b60a060405190810160405280600067ffffffffffffffff168152602001600061ffff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b8154818355818115116125cb578183600052602060002091820191016125ca919061263c565b5b505050565b8154818355818115116125f7578183600052602060002091820191016125f691906126c7565b5b505050565b8154818355818115116126235781836000526020600020918201910161262291906126c7565b5b505050565b602060405190810160405280600081525090565b6126c491905b808211156126c057600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549061ffff021916905560008201600a6101000a81549060ff021916905560008201600b6101000a81549060ff021916905560008201600c6101000a81549060ff021916905550600101612642565b5090565b90565b6126e991905b808211156126e55760008160009055506001016126cd565b5090565b905600a165627a7a72305820cb71972f1f7cab612bdf77ef0dda0d646f11979b91c18089f13fa3774a55b1680029",
  "sourceMap": "340:3380:5:-;;;1107:105:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1179:5;1171;:13;;;;;;;;;;;;:::i;:::-;;1200:7;1190;:17;;;;;;;;;;;;:::i;:::-;;1107:105;;509:10:9;501:5;;:18;;;;;;;;;;;;;;;;;;340:3380:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "340:3380:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1303:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2998:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:87:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5042:315:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2571:177:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3195:523:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5964:154:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298::15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2107:164:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:417;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1466:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:200:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6794:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:181:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2651:181:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4478:142:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:169:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:68:15;1340:6;;:::i;:::-;1361:5;1354:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:68;:::o;3577:111:13:-;3637:7;3659:14;:24;3674:8;3659:24;;;;;;;;;;;;;;;;;;;;;3652:31;;3577:111;;;:::o;2998:350::-;3059:13;3075:17;3083:8;3075:7;:17::i;:::-;3059:33;;3113:5;3106:12;;:3;:12;;;;3098:21;;;;;;;;3147:5;3133:19;;:10;:19;;;:58;;;;3156:35;3173:5;3180:10;3156:16;:35::i;:::-;3133:58;3125:67;;;;;;;;3236:1;3203:35;;:21;3215:8;3203:11;:21::i;:::-;:35;;;;:56;;;;3257:1;3242:17;;:3;:17;;;;3203:56;3199:145;;;3296:3;3269:14;:24;3284:8;3269:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3323:3;3307:30;;3316:5;3307:30;;;3328:8;3307:30;;;;;;;;;;;;;;;;;;3199:145;2998:350;;;:::o;2887:87:15:-;2931:7;2953:9;:16;;;;2946:23;;2887:87;:::o;5042:315:13:-;5129:8;1516:39;1534:10;1546:8;1516:17;:39::i;:::-;1508:48;;;;;;;;5170:1;5153:19;;:5;:19;;;;5145:28;;;;;;;;5202:1;5187:17;;:3;:17;;;;5179:26;;;;;;;;5212:30;5226:5;5233:8;5212:13;:30::i;:::-;5248:32;5264:5;5271:8;5248:15;:32::i;:::-;5286:25;5297:3;5302:8;5286:10;:25::i;:::-;5338:3;5322:30;;5331:5;5322:30;;;5343:8;5322:30;;;;;;;;;;;;;;;;;;5042:315;;;;:::o;2571:177:15:-;2653:7;2685:17;2695:6;2685:9;:17::i;:::-;2676:6;:26;2668:35;;;;;;;;2716:11;:19;2728:6;2716:19;;;;;;;;;;;;;;;2736:6;2716:27;;;;;;;;;;;;;;;;;;;2709:34;;2571:177;;;;:::o;3195:523:5:-;3348:7;3411:19;;:::i;:::-;3586:17;3395:8;;;;;;;;;;;3373:31;;:10;:31;;;3365:40;;;;;;;;3433:147;;;;;;;;;3463:3;3433:147;;;;;;3487:11;3433:147;;;;;;3516:9;3433:147;;;;;;3543:9;3433:147;;;;;;3567:6;3433:147;;;;;3411:169;;3628:1;3606:5;:19;;;;;;;;;;;:::i;:::-;;;;;;;;;;3617:7;3606:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;3586:43;;3640:21;3651:9;3640:21;;;;;;;;;;;;;;;;;;3667:24;3673:6;3681:9;3667:5;:24::i;:::-;3704:9;3697:16;;3195:523;;;;;;;;;:::o;5964:154:13:-;6055:8;1516:39;1534:10;1546:8;1516:17;:39::i;:::-;1508:48;;;;;;;;6071:42;6088:5;6095:3;6100:8;6071:42;;;;;;;;;;;;;:16;:42::i;:::-;5964:154;;;;:::o;2445:140::-;2500:4;2512:13;2528:10;:20;2539:8;2528:20;;;;;;;;;;;;;;;;;;;;;2512:36;;2578:1;2561:19;;:5;:19;;;;2554:26;;2445:140;;;;:::o;3298::15:-;3357:7;3389:13;:11;:13::i;:::-;3380:6;:22;3372:31;;;;;;;;3416:9;3426:6;3416:17;;;;;;;;;;;;;;;;;;;3409:24;;3298:140;;;:::o;2107:164:13:-;2163:7;2178:13;2194:10;:20;2205:8;2194:20;;;;;;;;;;;;;;;;;;;;;2178:36;;2245:1;2228:19;;:5;:19;;;;2220:28;;;;;;;;2261:5;2254:12;;2107:164;;;;:::o;1756:142::-;1812:7;1853:1;1835:20;;:6;:20;;;;1827:29;;;;;;;;1869:16;:24;1886:6;1869:24;;;;;;;;;;;;;;;;1862:31;;1756:142;;;:::o;238:20:9:-;;;;;;;;;;;;;:::o;1593:19:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1969:417::-;2040:26;653:5:9;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;2078:8:5;2040:47;;2279:17;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:39;;;;;;;;2364:17;2353:8;;:28;;;;;;;;;;;;;;;;;;1969:417;;:::o;1466:72:15:-;1505:6;;:::i;:::-;1526:7;1519:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:72;:::o;3969:200:13:-;4053:10;4046:17;;:3;:17;;;;4038:26;;;;;;;;4107:9;4070:17;:29;4088:10;4070:29;;;;;;;;;;;;;;;:34;4100:3;4070:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4149:3;4122:42;;4137:10;4122:42;;;4154:9;4122:42;;;;;;;;;;;;;;;;;;;;;;3969:200;;:::o;6794:227::-;6898:8;1516:39;1534:10;1546:8;1516:17;:39::i;:::-;1508:48;;;;;;;;6914:34;6927:5;6934:3;6939:8;6914:12;:34::i;:::-;6962:53;6987:5;6994:3;6999:8;7009:5;6962:24;:53::i;:::-;6954:62;;;;;;;;6794:227;;;;;:::o;2651:181:5:-;2708:6;;:::i;:::-;2753:17;;:::i;:::-;2730:16;2737:8;2730:6;:16::i;:::-;2722:25;;;;;;;;2773:18;2782:8;2773;:18::i;:::-;2753:38;;2804:23;2814:7;;;;;;;;;;;;;;;;;;;;;;;2823:3;2804:9;:23::i;:::-;2797:30;;2651:181;;;;:::o;4478:142:13:-;4560:4;4579:17;:25;4597:6;4579:25;;;;;;;;;;;;;;;:36;4605:9;4579:36;;;;;;;;;;;;;;;;;;;;;;;;;4572:43;;4478:142;;;;:::o;832:169:9:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o;7368:240:13:-;7454:4;7466:13;7482:17;7490:8;7482:7;:17::i;:::-;7466:33;;7524:5;7512:17;;:8;:17;;;:54;;;;7558:8;7533:33;;:21;7545:8;7533:11;:21::i;:::-;:33;;;7512:54;:91;;;;7570:33;7587:5;7594:8;7570:16;:33::i;:::-;7512:91;7505:98;;7368:240;;;;;:::o;8653:260::-;8754:6;8733:27;;:17;8741:8;8733:7;:17::i;:::-;:27;;;8725:36;;;;;;;;8807:1;8771:38;;:14;:24;8786:8;8771:24;;;;;;;;;;;;;;;;;;;;;:38;;;;8767:142;;;8854:1;8819:14;:24;8834:8;8819:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8889:1;8864:38;;8873:6;8864:38;;;8893:8;8864:38;;;;;;;;;;;;;;;;;;8767:142;8653:260;;:::o;4198:856:15:-;4316:18;4369:22;4432:17;4271:38;4293:5;4300:8;4271:21;:38::i;:::-;4337:16;:26;4354:8;4337:26;;;;;;;;;;;;4316:47;;4394:32;4424:1;4394:11;:18;4406:5;4394:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4369:57;;4452:11;:18;4464:5;4452:18;;;;;;;;;;;;;;;4471:14;4452:34;;;;;;;;;;;;;;;;;;;4432:54;;4526:9;4493:11;:18;4505:5;4493:18;;;;;;;;;;;;;;;4512:10;4493:30;;;;;;;;;;;;;;;;;;:42;;;;4578:1;4541:11;:18;4553:5;4541:18;;;;;;;;;;;;;;;4560:14;4541:34;;;;;;;;;;;;;;;;;;:38;;;;4940:11;:18;4952:5;4940:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5002:1;4973:16;:26;4990:8;4973:26;;;;;;;;;;;:30;;;;5039:10;5009:16;:27;5026:9;5009:27;;;;;;;;;;;:40;;;;4198:856;;;;;:::o;3697:226::-;3800:14;3763:31;3780:3;3785:8;3763:16;:31::i;:::-;3817:11;:16;3829:3;3817:16;;;;;;;;;;;;;;;:23;;;;3800:40;;3846:11;:16;3858:3;3846:16;;;;;;;;;;;;;;;:31;;;;;;;;;;;:::i;:::-;;;;;;;;;;3868:8;3846:31;;;;;;;3912:6;3883:16;:26;3900:8;3883:26;;;;;;;;;;;:35;;;;3697:226;;;:::o;5315:176::-;5376:26;5388:3;5393:8;5376:11;:26::i;:::-;5440:9;:16;;;;5413:14;:24;5428:8;5413:24;;;;;;;;;;;:43;;;;5462:9;:24;;;;;;;;;;;:::i;:::-;;;;;;;;;;5477:8;5462:24;;;;;;;5315:176;;:::o;10368:298:13:-;10479:4;10545:13;10496:16;:3;:14;;;:16::i;:::-;10495:17;10491:49;;;10529:4;10522:11;;;;10491:49;10576:3;10561:36;;;10598:5;10605:8;10615:5;10561:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10561:60:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10545:76;;605:10;10645:15;;10635:25;;;:6;:25;;;;10627:34;;10368:298;;;;;;;;:::o;459:340:1:-;508:6;;:::i;:::-;549;565:8;634:17;;:::i;:::-;674:6;530:1;525;:6;521:22;;;533:10;;;;;;;;;;;;;;;;;;;;;;521:22;558:1;549:10;;579:50;591:1;586;:6;;579:50;;;602:5;;;;;;;620:2;615:7;;;;;;;;;;;579:50;;;664:3;654:14;;;;;;;;;;;;;;;;;;;;;;;;;;;634:34;;689:1;683:3;:7;674:16;;696:74;708:1;703;:6;;696:74;;;745:2;741:1;:6;;;;;;;;736:2;:11;731:17;;719:4;724:3;;;;;;;719:9;;;;;;;;;;;;;;:29;;;;;;;;;;;761:2;756:7;;;;;;;;;;;696:74;;;789:4;775:19;;459:340;;;;;;;;:::o;59:396::-;123:6;;:::i;:::-;137:16;;:::i;:::-;171;;:::i;:::-;205;;:::i;:::-;265;;:::i;:::-;299:6;320;162:2;137:28;;196:2;171:28;;248:3;:10;235:3;:10;:23;224:35;;;;;;;;;;;;;;;;;;;;;;;;;;;205:54;;290:2;265:28;;308:1;299:10;;329:1;320:10;;315:55;336:3;:10;332:1;:14;315:55;;;364:3;368:1;364:6;;;;;;;;;;;;;;;;;;;;353:3;357;;;;;;353:8;;;;;;;;;;;;;;:17;;;;;;;;;;;348:3;;;;;;;315:55;;;385:1;381:5;;376:50;392:3;:10;388:1;:14;376:50;;;420:3;424:1;420:6;;;;;;;;;;;;;;;;;;;;409:3;413;;;;;;409:8;;;;;;;;;;;;;;:17;;;;;;;;;;;404:3;;;;;;;376:50;;;446:3;432:18;;59:396;;;;;;;;;;:::o;9651:214:13:-;9753:5;9732:26;;:17;9740:8;9732:7;:17::i;:::-;:26;;;9724:35;;;;;;;;9791:30;9819:1;9791:16;:23;9808:5;9791:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;9765:16;:23;9782:5;9765:23;;;;;;;;;;;;;;;:56;;;;9858:1;9827:10;:20;9838:8;9827:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9651:214;;:::o;835:110:8:-;893:7;920:1;915;:6;;908:14;;;;;;939:1;935;:5;928:12;;835:110;;;;:::o;9172:204:13:-;9278:1;9246:34;;:10;:20;9257:8;9246:20;;;;;;;;;;;;;;;;;;;;;:34;;;9238:43;;;;;;;;9310:3;9287:10;:20;9298:8;9287:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9343:28;9369:1;9343:16;:21;9360:3;9343:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9319:16;:21;9336:3;9319:21;;;;;;;;;;;;;;;:52;;;;9172:204;;:::o;7857:164::-;7941:1;7926:17;;:3;:17;;;;7918:26;;;;;;;;7950:25;7961:3;7966:8;7950:10;:25::i;:::-;8002:3;7981:35;;7998:1;7981:35;;;8007:8;7981:35;;;;;;;;;;;;;;;;;;7857:164;;:::o;451:150:7:-;508:4;520:12;569:4;557:17;549:25;;595:1;588:4;:8;581:15;;451:150;;;;:::o;1007:129:8:-;1065:7;1080:9;1096:1;1092;:5;1080:17;;1115:1;1110;:6;;1103:14;;;;;;1130:1;1123:8;;1007:129;;;;;:::o;340:3380:5:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol\";\nimport \"./OraclizeStringUtils.sol\";\nimport \"./PackSale.sol\";\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\n\n/// @title Base contract for CryptoStrikers. Defines what a card is and how to mint one.\n/// @author The CryptoStrikers Team\ncontract StrikersBase is ERC721Token(\"CryptoStrikers\", \"STRK\"), OraclizeStringUtils, Ownable {\n  string constant API_URL = \"https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/\";\n\n  /// @dev Emit this event whenever we mint a new card\n  ///  For Series 1 cards, this occurs during the minting of packs.\n  ///  For Series 2 cards, we mint and award them as a prize for the daily challenge.\n  event CardMinted(uint256 cardId);\n\n  /// @dev The struct representing the game's main object, a sports trading card.\n  struct Card {\n    // The timestamp at which this card was minted.\n    uint64 mintTime;\n\n    // For each run, cards for a given player have their mintNumber\n    // incremented in sequence. If we mint 1000 Messis, the third one\n    // to be minted has mintNumber = 3 (out of 1000).\n    uint16 mintNumber;\n\n    // The ID of the player on this card. See the players array in WorldCupInfo\n    uint8 playerId;\n\n    // We will be issuing 2 series of cards, each by a different illustrator.\n    // See xxxxx.sol for more info\n    uint8 seriesId;\n\n    // We reserve the right to mint multiple runs of each series.\n    // See xxxxx.sol for more info\n    uint8 runId;\n  }\n\n  /// @dev All the cards that have been minted, indexed by cardId.\n  Card[] public cards;\n\n  /// @dev The address of the sibling contract that is used to implement the sooper-sekret\n  ///  genetic combination algorithm.\n  PackSale packSale; // public?\n\n  /// @dev Update the address of the genetic contract, can only be called by the CEO.\n  /// @param _address An address of a GeneScience contract instance to be used from this point forward.\n  function setPackSaleAddress(address _address) external onlyOwner {\n    PackSale candidateContract = PackSale(_address);\n\n    // NOTE: verify that a contract is what we expect - https://github.com/Lunyr/crowdsale-contracts/blob/cfadd15986c30521d8ba7d5b6f57b4fefcc7ac38/contracts/LunyrToken.sol#L117\n    require(candidateContract.isPackSale());\n\n    // Set the new contract address\n    packSale = candidateContract;\n  }\n\n  /// @dev Returns the API URL for each card\n  ///   ex: https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/22\n  ///   The API will then return a JSON blob according to OpenSea's spec\n  ///   see: https://developers.opensea.io/getting-started.html\n  function tokenURI(uint256 _tokenId) public view returns (string) {\n    require(exists(_tokenId));\n    string memory _id = uint2str(_tokenId);\n    return strConcat(API_URL, _id);\n  }\n\n  /// @dev An internal method that creates a new card and stores it.\n  ///  Emits both a Birth and a Transfer event.\n  /// @param _playerId The ID of the player on the card (see WorldCupInfo)\n  /// @param _seriesId Series 1 or Series 2\n  /// @param _runId The number of the run within the series\n  /// @param _mintNumber The number of the card within the run\n  function _mintCard(\n    uint8 _playerId,\n    uint8 _seriesId,\n    uint8 _runId,\n    uint16 _mintNumber,\n    address _owner\n  )\n    external\n    returns (uint256)\n  {\n    require(msg.sender == address(packSale));\n    Card memory newCard = Card({\n      mintTime: uint64(now),\n      mintNumber: _mintNumber,\n      playerId: _playerId,\n      seriesId: _seriesId,\n      runId: _runId\n    });\n    uint256 newCardId = cards.push(newCard) - 1;\n    emit CardMinted(newCardId);\n    _mint(_owner, newCardId);\n    return newCardId;\n  }\n}\n",
  "sourcePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/StrikersBase.sol",
  "ast": {
    "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/StrikersBase.sol",
    "exportedSymbols": {
      "StrikersBase": [
        802
      ]
    },
    "id": 803,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 660,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 661,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 2424,
        "src": "26:66:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/OraclizeStringUtils.sol",
        "file": "./OraclizeStringUtils.sol",
        "id": 662,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 221,
        "src": "93:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/PackSale.sol",
        "file": "./PackSale.sol",
        "id": 663,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 597,
        "src": "129:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 664,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1266,
        "src": "154:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "43727970746f537472696b657273",
                "id": 666,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "377:16:5",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_711ffb826c6ea0d5d56cdea162903a5cf57b5475f3afc0f677f0438a15f3be1e",
                  "typeString": "literal_string \"CryptoStrikers\""
                },
                "value": "CryptoStrikers"
              },
              {
                "argumentTypes": null,
                "hexValue": "5354524b",
                "id": 667,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "395:6:5",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_707208bcb65c34b6918ead407a8111403f74240f0038d5607f5b64aac90a6ccf",
                  "typeString": "literal_string \"STRK\""
                },
                "value": "STRK"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 665,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2423,
              "src": "365:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$2423",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 668,
            "nodeType": "InheritanceSpecifier",
            "src": "365:37:5"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 669,
              "name": "OraclizeStringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 220,
              "src": "404:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OraclizeStringUtils_$220",
                "typeString": "contract OraclizeStringUtils"
              }
            },
            "id": 670,
            "nodeType": "InheritanceSpecifier",
            "src": "404:19:5"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 671,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1265,
              "src": "425:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1265",
                "typeString": "contract Ownable"
              }
            },
            "id": 672,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:5"
          }
        ],
        "contractDependencies": [
          220,
          1265,
          1318,
          1338,
          1345,
          1452,
          2035,
          2423
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for CryptoStrikers. Defines what a card is and how to mint one.\n @author The CryptoStrikers Team",
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802,
          1265,
          220,
          2423,
          2035,
          1345,
          1338,
          1318,
          1452
        ],
        "name": "StrikersBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 675,
            "name": "API_URL",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "437:92:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string memory"
            },
            "typeName": {
              "id": 673,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f75732d63656e7472616c312d63727970746f737472696b6572732d6170692e636c6f756466756e6374696f6e732e6e65742f63617264732f",
              "id": 674,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "463:66:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f08af1efac9481736671722f31800e61ea16aaaddac9c08afaf8ea9ccd869699",
                "typeString": "literal_string \"https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/\""
              },
              "value": "https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emit this event whenever we mint a new card\n  For Series 1 cards, this occurs during the minting of packs.\n  For Series 2 cards, we mint and award them as a prize for the daily challenge.",
            "id": 679,
            "name": "CardMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "760:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "759:16:5"
            },
            "src": "743:33:5"
          },
          {
            "canonicalName": "StrikersBase.Card",
            "id": 690,
            "members": [
              {
                "constant": false,
                "id": 681,
                "name": "mintTime",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "932:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 680,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 683,
                "name": "mintNumber",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1146:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 682,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1146:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 685,
                "name": "playerId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1250:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 684,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1250:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 687,
                "name": "seriesId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1384:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 686,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1384:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 689,
                "name": "runId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1506:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 688,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1506:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 802,
            "src": "862:660:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 693,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1593:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage",
              "typeString": "struct StrikersBase.Card storage ref[] storage ref"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 691,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 690,
                "src": "1593:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$690_storage_ptr",
                  "typeString": "struct StrikersBase.Card storage pointer"
                }
              },
              "id": 692,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1593:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage_ptr",
                "typeString": "struct StrikersBase.Card storage ref[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 695,
            "name": "packSale",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1746:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PackSale_$596",
              "typeString": "contract PackSale"
            },
            "typeName": {
              "contractScope": null,
              "id": 694,
              "name": "PackSale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 596,
              "src": "1746:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PackSale_$596",
                "typeString": "contract PackSale"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2034:352:5",
              "statements": [
                {
                  "assignments": [
                    703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 703,
                      "name": "candidateContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "2040:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 702,
                        "name": "PackSale",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 596,
                        "src": "2040:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PackSale_$596",
                          "typeString": "contract PackSale"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 705,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "2078:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 704,
                      "name": "PackSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2069:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PackSale_$596_$",
                        "typeString": "type(contract PackSale)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PackSale_$596",
                      "typeString": "contract PackSale"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2040:47:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 709,
                            "name": "candidateContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "2279:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PackSale_$596",
                              "typeString": "contract PackSale"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPackSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 615,
                          "src": "2279:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2279:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "2271:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 714,
                      "name": "packSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "2353:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 715,
                      "name": "candidateContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "2364:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      }
                    },
                    "src": "2353:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PackSale_$596",
                      "typeString": "contract PackSale"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:28:5"
                }
              ]
            },
            "documentation": "@dev Update the address of the genetic contract, can only be called by the CEO.\n @param _address An address of a GeneScience contract instance to be used from this point forward.",
            "id": 719,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1239,
                  "src": "2024:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2024:9:5"
              }
            ],
            "name": "setPackSaleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "1997:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:18:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:5"
            },
            "scope": 802,
            "src": "1969:417:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "2716:116:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 728,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "2737:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 727,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1580
                          ],
                          "referencedDeclaration": 1580,
                          "src": "2730:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2730:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "2722:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:25:5"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 744,
                      "src": "2753:17:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2753:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "2782:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 734,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "2773:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2753:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 739,
                        "name": "API_URL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2814:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "2823:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 738,
                      "name": "strConcat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "2804:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 725,
                  "id": 742,
                  "nodeType": "Return",
                  "src": "2797:30:5"
                }
              ]
            },
            "documentation": "@dev Returns the API URL for each card\n   ex: https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/22\n   The API will then return a JSON blob according to OpenSea's spec\n   see: https://developers.opensea.io/getting-started.html",
            "id": 744,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "2669:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:18:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "2708:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2708:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2707:8:5"
            },
            "scope": 802,
            "src": "2651:181:5",
            "stateMutability": "view",
            "superFunction": 2135,
            "visibility": "public"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "3359:359:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2436,
                            "src": "3373:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3373:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 763,
                              "name": "packSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "3395:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PackSale_$596",
                                "typeString": "contract PackSale"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PackSale_$596",
                                "typeString": "contract PackSale"
                              }
                            ],
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3387:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3387:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3373:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "3365:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:40:5"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "3411:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                        "typeString": "struct StrikersBase.Card memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 768,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "3411:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$690_storage_ptr",
                          "typeString": "struct StrikersBase.Card storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 779,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2438,
                            "src": "3463:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3456:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": "uint64"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3456:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "_mintNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "3487:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_playerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3516:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "_seriesId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3543:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 777,
                        "name": "_runId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3567:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 770,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "3433:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$690_storage_ptr_$",
                        "typeString": "type(struct StrikersBase.Card storage pointer)"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "mintTime",
                      "mintNumber",
                      "playerId",
                      "seriesId",
                      "runId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3433:147:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$690_memory",
                      "typeString": "struct StrikersBase.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3411:169:5"
                },
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "name": "newCardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "3586:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3586:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 784,
                          "name": "newCard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "3617:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                            "typeString": "struct StrikersBase.Card memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                            "typeString": "struct StrikersBase.Card memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "cards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3606:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage",
                            "typeString": "struct StrikersBase.Card storage ref[] storage ref"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3606:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$690_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct StrikersBase.Card storage ref) returns (uint256)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3606:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3628:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3606:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3586:43:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "newCardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3651:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 789,
                      "name": "CardMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "3640:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "3635:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "3673:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "newCardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3681:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 793,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343
                      ],
                      "referencedDeclaration": 2343,
                      "src": "3667:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:24:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "name": "newCardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 781,
                    "src": "3704:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 799,
                  "nodeType": "Return",
                  "src": "3697:16:5"
                }
              ]
            },
            "documentation": "@dev An internal method that creates a new card and stores it.\n  Emits both a Birth and a Transfer event.\n @param _playerId The ID of the player on the card (see WorldCupInfo)\n @param _seriesId Series 1 or Series 2\n @param _runId The number of the run within the series\n @param _mintNumber The number of the card within the run",
            "id": 801,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_mintCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "_playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3219:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "name": "_seriesId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3240:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "name": "_runId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3261:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "name": "_mintNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3279:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3303:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3213:108:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3348:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3347:9:5"
            },
            "scope": 802,
            "src": "3195:523:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "340:3380:5"
      }
    ],
    "src": "0:3721:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/StrikersBase.sol",
    "exportedSymbols": {
      "StrikersBase": [
        802
      ]
    },
    "id": 803,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 660,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 661,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 2424,
        "src": "26:66:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/OraclizeStringUtils.sol",
        "file": "./OraclizeStringUtils.sol",
        "id": 662,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 221,
        "src": "93:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/GiaSet/Desktop/Projects/cryptostrikers/contracts/PackSale.sol",
        "file": "./PackSale.sol",
        "id": 663,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 597,
        "src": "129:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 664,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1266,
        "src": "154:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "43727970746f537472696b657273",
                "id": 666,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "377:16:5",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_711ffb826c6ea0d5d56cdea162903a5cf57b5475f3afc0f677f0438a15f3be1e",
                  "typeString": "literal_string \"CryptoStrikers\""
                },
                "value": "CryptoStrikers"
              },
              {
                "argumentTypes": null,
                "hexValue": "5354524b",
                "id": 667,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "395:6:5",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_707208bcb65c34b6918ead407a8111403f74240f0038d5607f5b64aac90a6ccf",
                  "typeString": "literal_string \"STRK\""
                },
                "value": "STRK"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 665,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2423,
              "src": "365:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$2423",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 668,
            "nodeType": "InheritanceSpecifier",
            "src": "365:37:5"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 669,
              "name": "OraclizeStringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 220,
              "src": "404:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OraclizeStringUtils_$220",
                "typeString": "contract OraclizeStringUtils"
              }
            },
            "id": 670,
            "nodeType": "InheritanceSpecifier",
            "src": "404:19:5"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 671,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1265,
              "src": "425:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1265",
                "typeString": "contract Ownable"
              }
            },
            "id": 672,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:5"
          }
        ],
        "contractDependencies": [
          220,
          1265,
          1318,
          1338,
          1345,
          1452,
          2035,
          2423
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for CryptoStrikers. Defines what a card is and how to mint one.\n @author The CryptoStrikers Team",
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802,
          1265,
          220,
          2423,
          2035,
          1345,
          1338,
          1318,
          1452
        ],
        "name": "StrikersBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 675,
            "name": "API_URL",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "437:92:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string memory"
            },
            "typeName": {
              "id": 673,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f75732d63656e7472616c312d63727970746f737472696b6572732d6170692e636c6f756466756e6374696f6e732e6e65742f63617264732f",
              "id": 674,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "463:66:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f08af1efac9481736671722f31800e61ea16aaaddac9c08afaf8ea9ccd869699",
                "typeString": "literal_string \"https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/\""
              },
              "value": "https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emit this event whenever we mint a new card\n  For Series 1 cards, this occurs during the minting of packs.\n  For Series 2 cards, we mint and award them as a prize for the daily challenge.",
            "id": 679,
            "name": "CardMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "760:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "759:16:5"
            },
            "src": "743:33:5"
          },
          {
            "canonicalName": "StrikersBase.Card",
            "id": 690,
            "members": [
              {
                "constant": false,
                "id": 681,
                "name": "mintTime",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "932:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 680,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 683,
                "name": "mintNumber",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1146:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 682,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1146:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 685,
                "name": "playerId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1250:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 684,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1250:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 687,
                "name": "seriesId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1384:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 686,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1384:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 689,
                "name": "runId",
                "nodeType": "VariableDeclaration",
                "scope": 690,
                "src": "1506:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 688,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1506:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 802,
            "src": "862:660:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 693,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1593:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage",
              "typeString": "struct StrikersBase.Card storage ref[] storage ref"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 691,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 690,
                "src": "1593:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$690_storage_ptr",
                  "typeString": "struct StrikersBase.Card storage pointer"
                }
              },
              "id": 692,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1593:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage_ptr",
                "typeString": "struct StrikersBase.Card storage ref[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 695,
            "name": "packSale",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1746:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PackSale_$596",
              "typeString": "contract PackSale"
            },
            "typeName": {
              "contractScope": null,
              "id": 694,
              "name": "PackSale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 596,
              "src": "1746:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PackSale_$596",
                "typeString": "contract PackSale"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2034:352:5",
              "statements": [
                {
                  "assignments": [
                    703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 703,
                      "name": "candidateContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "2040:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 702,
                        "name": "PackSale",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 596,
                        "src": "2040:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PackSale_$596",
                          "typeString": "contract PackSale"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 705,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "2078:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 704,
                      "name": "PackSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2069:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PackSale_$596_$",
                        "typeString": "type(contract PackSale)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PackSale_$596",
                      "typeString": "contract PackSale"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2040:47:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 709,
                            "name": "candidateContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "2279:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PackSale_$596",
                              "typeString": "contract PackSale"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPackSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 615,
                          "src": "2279:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2279:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "2271:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 714,
                      "name": "packSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "2353:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 715,
                      "name": "candidateContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "2364:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PackSale_$596",
                        "typeString": "contract PackSale"
                      }
                    },
                    "src": "2353:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PackSale_$596",
                      "typeString": "contract PackSale"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:28:5"
                }
              ]
            },
            "documentation": "@dev Update the address of the genetic contract, can only be called by the CEO.\n @param _address An address of a GeneScience contract instance to be used from this point forward.",
            "id": 719,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1239,
                  "src": "2024:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2024:9:5"
              }
            ],
            "name": "setPackSaleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "1997:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:18:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:5"
            },
            "scope": 802,
            "src": "1969:417:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "2716:116:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 728,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "2737:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 727,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1580
                          ],
                          "referencedDeclaration": 1580,
                          "src": "2730:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2730:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "2722:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:25:5"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 744,
                      "src": "2753:17:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2753:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "2782:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 734,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "2773:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2753:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 739,
                        "name": "API_URL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2814:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "2823:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 738,
                      "name": "strConcat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "2804:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 725,
                  "id": 742,
                  "nodeType": "Return",
                  "src": "2797:30:5"
                }
              ]
            },
            "documentation": "@dev Returns the API URL for each card\n   ex: https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/22\n   The API will then return a JSON blob according to OpenSea's spec\n   see: https://developers.opensea.io/getting-started.html",
            "id": 744,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "2669:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:18:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "2708:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2708:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2707:8:5"
            },
            "scope": 802,
            "src": "2651:181:5",
            "stateMutability": "view",
            "superFunction": 2135,
            "visibility": "public"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "3359:359:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2436,
                            "src": "3373:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3373:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 763,
                              "name": "packSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "3395:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PackSale_$596",
                                "typeString": "contract PackSale"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PackSale_$596",
                                "typeString": "contract PackSale"
                              }
                            ],
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3387:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3387:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3373:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2439,
                      "src": "3365:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:40:5"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "3411:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                        "typeString": "struct StrikersBase.Card memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 768,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "3411:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$690_storage_ptr",
                          "typeString": "struct StrikersBase.Card storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 779,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2438,
                            "src": "3463:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3456:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": "uint64"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3456:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "_mintNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "3487:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_playerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3516:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "_seriesId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3543:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 777,
                        "name": "_runId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3567:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 770,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "3433:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$690_storage_ptr_$",
                        "typeString": "type(struct StrikersBase.Card storage pointer)"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "mintTime",
                      "mintNumber",
                      "playerId",
                      "seriesId",
                      "runId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3433:147:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$690_memory",
                      "typeString": "struct StrikersBase.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3411:169:5"
                },
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "name": "newCardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "3586:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3586:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 784,
                          "name": "newCard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "3617:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                            "typeString": "struct StrikersBase.Card memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Card_$690_memory_ptr",
                            "typeString": "struct StrikersBase.Card memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "cards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3606:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$690_storage_$dyn_storage",
                            "typeString": "struct StrikersBase.Card storage ref[] storage ref"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3606:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$690_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct StrikersBase.Card storage ref) returns (uint256)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3606:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3628:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3606:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3586:43:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "newCardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3651:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 789,
                      "name": "CardMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "3640:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "3635:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "3673:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "newCardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3681:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 793,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343
                      ],
                      "referencedDeclaration": 2343,
                      "src": "3667:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:24:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "name": "newCardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 781,
                    "src": "3704:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 799,
                  "nodeType": "Return",
                  "src": "3697:16:5"
                }
              ]
            },
            "documentation": "@dev An internal method that creates a new card and stores it.\n  Emits both a Birth and a Transfer event.\n @param _playerId The ID of the player on the card (see WorldCupInfo)\n @param _seriesId Series 1 or Series 2\n @param _runId The number of the run within the series\n @param _mintNumber The number of the card within the run",
            "id": 801,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_mintCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "_playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3219:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "name": "_seriesId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3240:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "name": "_runId",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3261:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "name": "_mintNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3279:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3303:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3213:108:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "3348:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3347:9:5"
            },
            "scope": 802,
            "src": "3195:523:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "340:3380:5"
      }
    ],
    "src": "0:3721:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9414329bf6837db915b4d5e0e22ecc27a33129c5",
      "transactionHash": "0xe68d5b58638160ea384ffefdbf7a1dcf15d61b5398dd5f5c36d0a01a8623f125"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-10T05:10:54.383Z"
}